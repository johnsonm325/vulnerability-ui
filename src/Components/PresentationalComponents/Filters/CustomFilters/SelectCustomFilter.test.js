import userEvent from '@testing-library/user-event';
import SelectCustomFilter from './SelectCustomFilter';
import { fireEvent, render, screen, waitFor, within } from '@testing-library/react';

const selectProps = null
const options = [
    { value: "op1", label: "option 1" },
    { value: "op2", label: "option 2" },
    { value: "op3", label: "option 3" }
]
const filterName = "My filter"
const filterId = "my_filter"

describe('SelectCustomFilter component', () => {
    it('Should have selected first item by default.', async () => {
        let filterData = { my_filter: "op1" }
        const setFilterData = newData => filterData = newData

        render(
            <SelectCustomFilter filterData={filterData} setFilterData={setFilterData} selectProps={selectProps} options={options} filterName={filterName} filterId={filterId} />
        );

        await waitFor(() => userEvent.click(screen.getByRole('button', {
            name: /my filter: option 1/i
        })));

        const option1 = screen.getByRole('option', {
            name: /option 1/i
        });
        const option2 = screen.getByRole('option', {
            name: /option 2/i
        });
        const option3 = screen.getByRole('option', {
            name: /option 3/i
        });
        
        expect(within(option1).getByRole('img', {
            hidden: true
        })).toBeTruthy();
        expect(within(option2).queryByRole('img', {
            hidden: true
        })).toBeFalsy();
        expect(within(option3).queryByRole('img', {
            hidden: true
        })).toBeFalsy();
    });

    it('Should update filter data on radio change.', async () => {
        let filterData = { my_filter: "op1" }
        const setFilterData = newData => filterData = newData

        render(
            <SelectCustomFilter filterData={filterData} setFilterData={setFilterData} selectProps={selectProps} options={options} filterName={filterName} filterId={filterId} />
        );

        await waitFor(() => userEvent.click(screen.getByRole('button', {
            name: /my filter: option 1/i
        })));

        const option2 = screen.getByRole('option', {
            name: /option 2/i
        });

        await waitFor(() => userEvent.click(option2));

        expect(filterData).toStrictEqual({ my_filter: "op2" })
    });
});
